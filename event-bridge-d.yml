name: Deploy All Services

on:
  push:
    branches:
      - develop
    paths:
      - 'cloudfront/**'
      - 'elastic-beanstalk/**'
      - 'lambdas/**'
      - 'eventbridge/**'

  pull_request:
    branches: ["*"]
    paths:
      - 'cloudfront/**'
      - 'elastic-beanstalk/**'
      - 'lambdas/**'
      - 'eventbridge/**'

permissions:
  id-token: write
  contents: read

env:
  terraform-projects:
    cloudfront: cloudfront
    elastic_beanstalk: elastic-beanstalk
    lambdas: lambdas
    eventbridge: eventbridge/schedulers

jobs:
  Terraform_Plan:
    name: Plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [cloudfront, elastic_beanstalk, lambdas, eventbridge]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::541104114859:role/github-actions-role
          role-session-name: git-actions-deployment
          aws-region: eu-central-1

      - name: Terraform Init
        run: |
          cd ${{ env.terraform-projects[matrix.project] }}
          terraform init

      - name: Terraform Plan
        run: |
          cd ${{ env.terraform-projects[matrix.project] }}
          terraform plan -var-file=vars/dev.tfvars

  Deploy_to_Lower_Environments:
    strategy:
      matrix:
        aws-environments: [dev, qa]
        project: [cloudfront, elastic_beanstalk, lambdas, eventbridge]
    if: ${{ github.event_name == 'push' }}
    name: Non-prod Deploy
    needs: Terraform_Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::541104114859:role/github-actions-role
          role-session-name: git-actions-deployment
          aws-region: eu-central-1

      - name: Terraform Apply
        run: |
          cd ${{ env.terraform-projects[matrix.project] }}
          terraform apply -var-file=vars/${{ matrix.aws-environments }}.tfvars -auto-approve

  Deploy_to_Prod_Environments:
    strategy:
      matrix:
        aws-environments: [uat, uat2, prod]
        project: [cloudfront, elastic_beanstalk, lambdas, eventbridge]
    if: ${{ github.event_name == 'push' }}
    name: Prod Deploy
    needs: Deploy_to_Lower_Environments
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::541104114859:role/github-actions-role
          role-session-name: git-actions-deployment
          aws-region: eu-central-1

      - name: Terraform Apply
        run: |
          cd ${{ env.terraform-projects[matrix.project] }}
          terraform apply -var-file=vars/${{ matrix.aws-environments }}.tfvars -auto-approve

  Deploy_CloudFront_EU_Dev:
    name: Deploy CloudFront EU Dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/marcelsunche-cf-backend'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::541104114859:role/github-actions-role
          role-session-name: git-actions-deployment
          aws-region: eu-central-1

      - name: Terraform Init
        run: |
          cd cloudfront
          terraform init

      - name: Terraform Plan
        run: |
          cd cloudfront
          terraform plan -var-file=vars/dev.tfvars

      - name: Terraform Apply
        run: |
          cd cloudfront
          terraform apply -var-file=vars/dev.tfvars -auto-approve
