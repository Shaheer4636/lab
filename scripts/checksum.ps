#!/usr/bin/env bash
set -euo pipefail

# Inputs expected in variable group or release variables
: "${AEM_DEPLOY_URL:?AEM_DEPLOY_URL not set}"
: "${AEM_DEPLOY_USERNAME:?AEM_DEPLOY_USERNAME not set}"
: "${AEM_DEPLOY_PASSWORD:?AEM_DEPLOY_PASSWORD not set}"

AEM_DEPLOY_ARTIFACT_FOLDER="$(System.DefaultWorkingDirectory)/_bsro-aem-shared/zip-artifacts"

# Find first ZIP to deploy
FILEPATH="$(ls "$AEM_DEPLOY_ARTIFACT_FOLDER"/*.zip -1 2>/dev/null | head -n1 || true)"
if [[ -z "${FILEPATH}" ]]; then
  echo "No ZIP in $AEM_DEPLOY_ARTIFACT_FOLDER"
  echo "##vso[task.setvariable variable=shouldDeploy;]False"
  exit 0
fi

FILENAME="$(basename "$FILEPATH")"          # with .zip
BASENAME="${FILENAME%.zip}"                 # without .zip

# Registry (package group) — switch if file starts with xtc
REGISTRY="com.bridgestone.bsro.aem"
if [[ "$BASENAME" == xtc* ]]; then
  REGISTRY="bsro_hotfix"
fi

echo "Package: $FILENAME (group: $REGISTRY)"

# Does remote package exist?
PREVIEW_URL="${AEM_DEPLOY_URL}/crx/packmgr/service/.json/etc/packages/${REGISTRY}/${FILENAME}?cmd=preview"
EXISTS_REMOTE="$(curl -s -u "${AEM_DEPLOY_USERNAME}:${AEM_DEPLOY_PASSWORD}" -X POST "$PREVIEW_URL" | jq -r '.success')"
echo "Remote exists: $EXISTS_REMOTE"

if [[ "$EXISTS_REMOTE" == "true" ]]; then
  echo "Compare checksums (remote vs local)"

  # remote checksum (download stream -> md5)
  HASH_TARGET="$(curl -s -u "${AEM_DEPLOY_USERNAME}:${AEM_DEPLOY_PASSWORD}" \
    -X POST "${AEM_DEPLOY_URL}/etc/packages/${REGISTRY}/${FILENAME}" \
    | md5sum | cut -d ' ' -f 1)"

  # local checksum
  HASH_SOURCE="$(md5sum "$FILEPATH" | cut -d ' ' -f 1)"

  echo "remote: $HASH_TARGET"
  echo "local : $HASH_SOURCE"

  if [[ "$HASH_TARGET" == "$HASH_SOURCE" ]]; then
    echo "Same checksum — deploy allowed."
    echo "##vso[task.setvariable variable=shouldDeploy;]True"
  else
    echo "Different checksum — skip deploy (needs manual review)."
    echo "##vso[task.setvariable variable=shouldDeploy;]False"
  fi
else
  echo "Package not found remotely — deploy allowed."
  echo "##vso[task.setvariable variable=shouldDeploy;]True"
fi
