# Inputs
$Host     = "$(HOST1)"
$User     = "$(SSH_USER)"
$KeyFile  = "$(Agent.TempDirectory)\id_rsa"
$Source   = "$(System.DefaultWorkingDirectory)\extracted"
$Target   = "/tmp/configs"

# Load key and connect
Import-Module Posh-SSH -ErrorAction Stop
$Key = Get-Content -Raw -Path $KeyFile | ConvertTo-SecureString -AsPlainText -Force
$KeyObj = New-Object Renci.SshNet.PrivateKeyFile($KeyFile)
$SshParams = @{
  ComputerName = $Host
  Credential   = New-Object System.Management.Automation.PSCredential($User,(ConvertTo-SecureString 'x' -AsPlainText -Force))
  KeyFile      = $KeyFile
}
$Sftp = New-SFTPSession -ComputerName $Host -KeyFile $KeyFile -Credential $SshParams.Credential -AcceptKey

# Recreate remote target and upload
Invoke-SSHCommand -Index $Sftp.SessionId -Command "rm -rf $Target && mkdir -p $Target" | Out-Null
$items = Get-ChildItem -Path $Source -Recurse -File
foreach ($i in $items) {
  $rel = $i.FullName.Substring($Source.Length).TrimStart('\')
  $remote = ($Target + "/" + ($rel -replace '\\','/'))
  $remoteDir = Split-Path $remote -Parent
  Invoke-SSHCommand -Index $Sftp.SessionId -Command "mkdir -p $remoteDir" | Out-Null
  Set-SFTPFile -SessionId $Sftp.SessionId -LocalFile $i.FullName -RemotePath $remote
  Write-Host "Uploaded: $remote"
}
Remove-SFTPSession -SessionId $Sftp.SessionId
